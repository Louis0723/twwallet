{"version":3,"file":"static/js/37.chunk.js","sources":["/Users/linyitang/Desktop/newWallet2/src/component/qrcode/index.jsx","/Users/linyitang/Desktop/newWallet2/src/page/coldWallet/bitcoinColdWallet/createTx.jsx"],"sourcesContent":["import qrcode from './qrcode';\nimport QRcodeInput from './qrcodeInput';\n// import QRcodeView from './qrcodeView';\nexport default {\n    qrcode,\n    QRcodeInput,\n    // QRcodeView\n}\nexport {\n    qrcode,\n    QRcodeInput,\n    // QRcodeView\n}","import React, { Component } from 'react';\nimport { QRcodeInput } from './../../../component/qrcode'\n\n// import { website } from '../../../lib/website';\n// import QRCodeMake from '../../../lib/qrcodeMake';\nimport bitcoinlib from 'bitcoinjs-lib';\n\n\n// class DialogQrcode extends Component {\n//     render() {\n//         return (\n//             <div id=\"qrcodeModal\" className=\"modal fade\" role=\"dialog\">\n//                 <div className=\"modal-dialog\">\n//                     <div className=\"modal-content\">\n//                         <div className=\"modal-header\">\n//                             <button type=\"button\" className=\"close\" data-dismiss=\"modal\" >&times;</button>\n//                             <h4 className=\"modal-title\">掃描Qrcode</h4>\n//                         </div>\n//                         <div className=\"modal-body\">\n//                             <div id=\"qrcode\"></div>\n//                         </div>\n//                         {/* <div className=\"modal-footer\">\n\n//                         </div> */}\n//                     </div>\n\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n\n\nexport default class CreateTx extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            address: '',\n            network: 'testnet',\n            balance: 0,\n            fees: 0.07,\n            segwit: false,\n            receiverNumber: 1,\n            to: [{}]\n        }\n    }\n    // componentWillUnmount = () => { }\n\n    // query = ({ network = this.state.network, address = this.state.address }) => {\n    //     let req = website[network === 'testnet' ? 'testnetQuery' : 'bitcoinQuery'](address)\n    //     req.then(({ data: res }) => {\n    //         this.state.balance = res.unspent_outputs\n    //             .map((v) => ({ value: v.value / 100000000 }))\n    //             .reduce((x, y) => y.value + x, 0)\n    //         this.forceUpdate()\n    //     }).catch(() => {\n    //         this.setState({ balance: 0 })\n    //     })\n    // }\n    // submit = () => {\n    //     website[this.state.network === 'testnet' ? 'testnetQuery' : 'bitcoinQuery'](this.state.address)\n    //     .then(({data: res})=>{\n    //         let txs = res.unspent_outputs\n    //         .map((v) => ({value: v.value, txid: v.tx_hash_big_endian, vout: v.tx_output_n}))\n    //         .sort((a, b) => b.value - a.value);\n    //         let amount = this.state.to.reduce((x,y)=>x + y.amount * 100000000, 0) + this.state.fees* 100000000;\n    \n    //         let tb = new bitcoinlib.TransactionBuilder(this.state.network === 'testnet'? bitcoinlib.networks.testnet : undefined);\n    //         let txAmount = 0\n    //         for(let tx of txs) {\n    //             txAmount += tx.value;\n    //             tb.addInput(tx.txid, tx.vout)\n                \n    //             if(txAmount > amount) {\n    //                 tb.addOutput(this.state.address, txAmount - amount)\n    //                 break;\n    //             }\n    //         }\n    //         if (txAmount < amount) {\n    //             alert({error:'balance insufficient'})\n    //         } else {\n    //             this.state.to.forEach(({address, amount})=>{\n    //                 tb.addOutput(address, amount * 100000000)\n    //             })\n    \n    //             let tx = tb.buildIncomplete();\n    //             let txstring = tx.toHex()\n    //             window.$('#qrcodeModal').modal('show')\n    //             document.getElementById('qrcode').innerHTML = ''\n    //             new QRCodeMake(document.getElementById('qrcode'), txstring);\n    //         }\n    //     })\n        \n    // }\n    render() {\n        return (\n            <div>\n                <div className=\"box box-primary\">\n                    <div className=\"box-header with-border\">\n                        <h3 className=\"box-title\">發起比特幣交易</h3>\n                    </div>\n                    <div className=\"box-body\">\n                        <div className=\"form-group\">\n                            <label>比特幣網路</label>\n                            <select\n                                className=\"form-control\"\n                                onChange={(e) => {\n                                    switch ((e.target.value | 1) <= 1) {\n                                        case true:\n                                            this.state.network = 'testnet';\n                                            this.state.fees = 0.07;\n                                            break\n                                        case false:\n                                            this.state.network = 'mainnet'\n                                            this.state.fees = 0.001;\n                                            break\n                                    }\n                                    this.state.segwit = (e.target.value % 2) === 1;\n                                    this.forceUpdate()\n                                    this.query({})\n                                }}>\n                                <option value=\"0\">bitcoin testnet(legacy)</option>\n                                <option value=\"1\">bitcoin testnet(segwit)</option>\n                                <option value=\"2\">bitcoin(legacy)</option>\n                                <option value=\"3\">bitcoin(segwit)</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>發起地址</label>\n                            <QRcodeInput\n                                placeholder=\"Bitcoin Address\"\n                                onChange={(e) => {\n                                    this.state.address = e.target.value\n                                    this.forceUpdate()\n                                    this.query({})\n                                }} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>餘額</label>\n                            <input type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Balance\"\n                                value={this.state.balance}\n                                disabled\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>交易費(礦工交易費可自由調整，可參考此<a href=\"https://bitcoinfees.earn.com/\" target=\"_blank\">網站</a>)</label>\n                            <input type=\"Number\"\n                                className=\"form-control\"\n                                placeholder=\"fees\"\n                                value={this.state.fees}\n                                onChange={(e) => {\n                                    this.state.fees = e.target.value;\n                                    this.forceUpdate()\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>收款人數</label>\n                            <input\n                                placeholder=\"收款人數\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.receiverNumber}\n                                onChange={(e) => {\n                                    this.state.to.length = Number(e.target.value);\n                                    for (let i = 0; i < e.target.value; i++) {\n                                        this.state.to[i] = this.state.to[i] || {};\n                                    }\n                                    this.setState({ receiverNumber: Number(e.target.value) })\n                                }}\n                            />\n                        </div>\n                        {\n                            (() => {\n                                let inputs = [];\n                                for (let i = 0; i < this.state.receiverNumber; i++) {\n                                    inputs.push(\n                                        <div className=\"form-group\">\n                                            <label>收款人</label>\n                                            <QRcodeInput\n                                                placeholder=\"Address\"\n                                                onChange={(e) => {\n                                                    this.state.to[i].address = e.target.value;\n                                                }}\n                                            />\n                                            <input\n                                                type=\"Number\"\n                                                className=\"form-control\"\n                                                placeholder=\"Amount\"\n                                                onChange={(e) => {\n                                                    this.state.to[i].amount = e.target.value;\n                                                }}\n                                            />\n                                        </div>)\n                                }\n                                return inputs;\n                            })()\n                        }\n                    </div>\n                    <div className=\"box box-footer\">\n                        <button className=\"btn btn-primary\" onClick={this.submit} >產生原始交易訊息QrCode</button>\n                    </div>\n                    {/* <DialogQrcode /> */}\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":"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","sourceRoot":""}