{"version":3,"file":"static/js/23.chunk.js","sources":["/Users/linyitang/Desktop/newWallet2/src/component/qrcode/index.jsx","/Users/linyitang/Desktop/newWallet2/src/page/dapp/ethMail/sendMail.jsx"],"sourcesContent":["import qrcode from './qrcode';\nimport QRcodeInput from './qrcodeInput';\n// import QRcodeView from './qrcodeView';\nexport default {\n    qrcode,\n    QRcodeInput,\n    // QRcodeView\n}\nexport {\n    qrcode,\n    QRcodeInput,\n    // QRcodeView\n}","import React, { Component } from 'react';\nimport { QRcodeInput } from '../../../component/qrcode'\nimport { observer, inject } from 'mobx-react';\nimport * as ethers from 'ethers/index.js';\nimport Config from '../../../contract/config.json'\n\n\n@inject('ethereumStore')\n@observer\nexport default class SendMail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: '',\n            recipient: '',\n            recipients: [],\n            body: '',\n            // ccs: [],\n            // reMailID: this.props.reMailID || '',\n            // fwMailID: this.props.fwMailID || '',\n        }\n        const ethMail = Config.ethMail;\n        this.contract = new ethers.Contract(ethMail[this.props.ethereumStore.networkId].contractAddress, ethMail.abi, this.props.ethereumStore.provider);\n    }\n\n    add(str) {\n        return /^0x[0-9a-fA-F]{40}$/.test(str);\n    }\n    double(arr, str) {\n        return arr.findIndex(v => v == str) < 0;\n    }\n    addRecipient = (e) => {\n        let recipient = e.target.value;\n        this.setState({ recipient })\n        if (this.add(recipient)) {\n            e.target.value = '';\n            if (this.double(this.state.recipients, recipient)) {\n                this.state.recipients.push(recipient);\n                this.forceUpdate()\n            }\n        }\n    }\n    submit = async (e) => {\n        e.preventDefault();\n        let sender = this.contract.connect(this.props.ethereumStore.wallet.connect(this.props.ethereumStore.provider));\n        let tx = await sender.send(this.state.recipients, [], this.state.title, this.state.body, ethers.utils.formatBytes32String(''))\n\n        alert('txid: ' + tx.hash)\n        setTimeout(async () => {\n            await tx.wait();\n        })\n    }\n\n    render() {\n        let recipients = this.state.recipients.map(v => (\n            <div className=\"col-xs-12\"><small className=\"label bg-green\">{v}\n                <i className=\"fa fa-close\" onClick={(e) => {\n                    this.state.recipients.splice(this.state.recipients.findIndex(w => w == v), 1); this.forceUpdate()\n                }}></i>\n            </small></div>\n        ))\n        return (\n            <form>\n                <div className=\"box box-primary\">\n                    <div className=\"box-header with-border\">\n                        <h3 className=\"box-title\">寫信</h3>\n                    </div>\n                    <div className=\"box-body\">\n                        <div className=\"form-group\">\n                            <label>標題</label>\n                            <input className=\"form-control\" placeholder=\"Title\" maxLength=\"50\" onChange={(e) => { this.state.title = e.target.value }} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>收件人</label>\n                            <QRcodeInput placeholder=\"Recipient\" maxLength=\"42\" onChange={this.addRecipient} />\n                        </div>\n                        {recipients}\n                        {/* <div className=\"form-group\">\n                            <label>副本</label>\n                            <input className=\"form-control\" placeholder=\"CC\" maxLength=\"42\" onChange={this.activeCC} />\n                        </div> */}\n                        <div className=\"form-group\">\n                            <label>內容</label>\n                            <textarea\n                                onChange={(e) => { this.state.body = e.target.value }}\n                                className=\"form-control\"\n                                rows=\"3\"\n                                placeholder=\"Text\"\n                                style={{ \"margin\": \"0px 3px 0px 0px\", \"width\": \"100%\", \"height\": \"291px\" }}>\n                            </textarea>\n                        </div>\n                    </div>\n                    <div className=\"box-footer\">\n                        <button className=\"pull-left btn btn-primary\" onClick={this.submit}>送件</button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\nexport { SendMail };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AAKA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AARA;AASA;AACA;AAZA;AAaA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AAuBA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;AAzFA;AAAA;AA2FA;;;;;;;;;;;;AA3FA;;;;;;;;;A","sourceRoot":""}