{"version":3,"file":"static/js/25.chunk.js","sources":["/Users/linyitang/Desktop/newWallet2/src/contract/index.js","/Users/linyitang/Desktop/newWallet2/src/page/dapp/ethMail/inbox.jsx"],"sourcesContent":["import * as ethers from 'ethers/index.js';\nimport Config from './config.json'\n\n\n\nfunction toHumanReadable(abi) {\n    if (!Array.isArray(abi)) { return }\n    abi = abi.filter(v => v.type !== 'fallback')\n    const hrabi = abi.map(v => {\n        const type = v.type\n        const name = v.name ? ' ' + v.name : ''\n        const inputs = v.inputs ? v.inputs.map(i => i.type + (i.indexed ? ' indexed' : '') + (i.name ? ' ' + i.name : '')).join() : ''\n        const stateMutability = v.stateMutability ? (v.stateMutability !== \"nonpayable\" ? ' ' + v.stateMutability : '') : ''\n        const returns = v.outputs ? (v.outputs.length >= 0 ? ` returns (${v.outputs.map((i) => i.type + (i.name ? ' ' + i.name : '')).join()})` : '') : ''\n        return `${type}${name}(${inputs})${stateMutability}${returns}`;\n    })\n    return JSON.stringify(hrabi, null, 2);\n}\nfunction toAbi(hrabi) {\n    if (!Array.isArray(hrabi)) { return }\n    let abi = new ethers.utils.Interface(hrabi).abi.map(abi => {\n        abi = JSON.parse(JSON.stringify(abi));\n        delete abi.gas;\n        if (abi.stateMutability === null) {\n            delete abi.stateMutability\n        }\n        return abi\n    })\n    return JSON.stringify(abi, null, 2);\n}\n\nfunction erc20(tokenAddress, provider) {\n    let contract = new ethers.Contract(tokenAddress, Config.erc20.abi, provider);\n    return contract;\n}\n\nasync function deployErc20Token(name, symbol, decimals, wallet) {\n    let erc20 = new ethers.ContractFactory(Config.erc20.abi, Config.erc20.bytecode);\n    erc20 = erc20.connect(wallet);\n    let contract = await erc20.deploy(name, symbol, decimals);\n    return contract\n}\n\nasync function deployMutiWalletToken(_owners, _required, _daylimit, wallet) {\n    let mutiWallet = new ethers.ContractFactory(Config.mutiWallet.abi, Config.mutiWallet.bytecode);\n    mutiWallet = mutiWallet.connect(wallet);\n    let contract = await mutiWallet.deploy(name, symbol, decimals);\n    return contract\n}\n\n\nfunction Event(contract, eventName, args = [], fromBlock = 0, toBlock = 'latest') {\n    args = Array.isArray(args) ? args : [args];\n    let event = contract.filters[eventName](...args);\n    let abi = contract.interface.abi.find((v) => v.name === eventName).inputs;\n\n    let filter = {\n        fromBlock,\n        toBlock,\n        ...event\n    }\n\n\n    return this.getLogs(filter).then(function (result) {\n        let coder = new ethers.utils.AbiCoder()\n\n        let abi1 = abi.filter((v) => v.indexed)\n        let abi2 = abi.filter((v) => !v.indexed)\n\n        let r = result.map(r => {\n            r.topics.shift()\n            let topics = r.topics.map((t, i) => {\n                return coder.decode([abi1[i]], t)[0]\n            })\n            let datas = coder.decode(abi2, r.data)\n            let _r = abi.map(v => v.indexed ? topics.shift() : datas.shift())\n            _r.transactionHash = r.transactionHash\n            _r.blockNumber = Number(r.blockNumber)\n            return _r\n        })\n\n        return r\n    })\n\n    return Promise.resolve(1)\n}\n\n\nexport default {\n    toAbi,\n    toHumanReadable,\n    deployErc20Token,\n    deployMutiWalletToken,\n    erc20,\n    Event\n}\n\nexport {\n    toAbi,\n    toHumanReadable,\n    deployErc20Token,\n    deployMutiWalletToken,\n    erc20,\n    Event\n};\n\n","import React, { Component } from 'react';\nimport config from './config.json';\nimport { Link } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\nimport * as ethers from 'ethers/index.js';\nimport Config from '../../../contract/config.json'\nimport { Event } from '../../../contract/index'\nimport dayjs from 'dayjs';\n\n@inject('ethereumStore')\n@observer\nexport default class Inbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            recipients: [],\n            ccs: [],\n            sends: []\n        }\n        const ethMail = Config.ethMail;\n        this.contract = new ethers.Contract(ethMail[this.props.ethereumStore.networkId].contractAddress, ethMail.abi, this.props.ethereumStore.provider);\n    }\n    componentWillMount = async () => {\n        let event = Event.bind(this.props.ethereumStore.provider);\n        let [SendMailToRecipient, SendMailToCC, AuthorSendMail] = await Promise.all([\n            event(this.contract, 'SendMailToRecipient', [null, this.props.ethereumStore.address]),\n            event(this.contract, 'SendMailToCC', [null, this.props.ethereumStore.address]),\n            event(this.contract, 'AuthorSendMail', [null, this.props.ethereumStore.address]),\n        ]);\n        SendMailToRecipient = await Promise.all(SendMailToRecipient.map(v => event(this.contract, 'MailInfo', [v[0]])))\n        SendMailToCC = await Promise.all(SendMailToCC.map(v => event(this.contract, 'MailInfo', [v[0]])))\n        AuthorSendMail = await Promise.all(AuthorSendMail.map(v => event(this.contract, 'MailInfo', [v[0]])))\n        console.log(SendMailToRecipient, SendMailToCC, AuthorSendMail)\n        this.setState({\n            recipients: [].concat(...SendMailToRecipient),\n            ccs: [].concat(...SendMailToCC),\n            sends: [].concat(...AuthorSendMail),\n        })\n    }\n    \n\n    render() {\n        let recipients = this.state.recipients.map((v, index) => {\n            return (\n                <tr key={v[0]} >\n                    <td>{index + 1}</td>\n                    <td>{v[1]}</td>\n                    <td>{v[2]}</td>\n                    <td>{dayjs(v[3].toNumber() * 1000).format('YYYY年MM月DD日 HH:mm:ss')}</td>\n                    <td><Link to={\"/dapp/ethMail/reading?mailId=\" + v[0]}\n                        onClick={() => {\n                            this.props.ethMail.setObject({\n                                mailId: v[0],\n                                send: v[1],\n                                title: v[2],\n                                body: v[4],\n                            })\n                        }}\n\n                    >點擊我</Link></td>\n                </tr>\n            )\n        })\n        // let ccs = this.state.ccs.map((v, index) => {\n        //     return (\n        //         <tr key={v[0]} >\n        //             <td>{index + 1}</td>\n        //             <td>{v[1]}</td>\n        //             <td>{v[2]}</td>\n        //             <td>{dayjs(v[3].toNumber() * 1000).format('YYYY年MM月DD日 HH:mm:ss')}</td>\n        //             <td><Link to={\"/dapp/ethMail/reading?mailId=\" + v[0]}\n        //                 onClick={() => {\n        //                     this.props.ethMail.setObject({\n        //                         mailId: v[0],\n        //                         send: v[1],\n        //                         title: v[2],\n        //                         body: v[4],\n        //                     })\n        //                 }}\n\n        //             >點擊我</Link></td>\n        //         </tr>\n        //     )\n        // })\n        let sends = this.state.sends.map((v, index) => {\n            return (\n                <tr key={v[0]} >\n                    <td>{index + 1}</td>\n                    <td>{v[1]}</td>\n                    <td>{v[2]}</td>\n                    <td>{dayjs(v[3].toNumber() * 1000).format('YYYY年MM月DD日 HH:mm:ss')}</td>\n                    <td><Link to={\"/dapp/ethMail/reading?mailId=\" + v[0]}\n                        onClick={() => {\n                            this.props.ethMail.setObject({\n                                mailId: v[0],\n                                send: v[1],\n                                title: v[2],\n                                body: v[4],\n                            })\n                        }}\n\n                    >點擊我</Link></td>\n                </tr>\n            )\n        })\n        return (\n            <div>\n                <div className=\"box box-primary\">\n                    <div className=\"box-header with-border\">\n                        <h3 className=\"box-title\">收件夾</h3>\n                    </div>\n                    <div className=\"box-body\">\n                        <table className=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th style={{ \"width\": \"10px\" }}>#</th>\n                                    <th>寄件者</th>\n                                    <th>標題</th>\n                                    <th>時間</th>\n                                    <th>閱讀</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {recipients}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"box-footer\"> </div>\n                </div>\n                {/* <div className=\"box box-primary\">\n                    <div className=\"box-header with-border\">\n                        <h3 className=\"box-title\">CC</h3>\n                    </div>\n                    <div className=\"box-body\">\n                        <table className=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th style={{ \"width\": \"10px\" }}>#</th>\n                                    <th>寄件者</th>\n                                    <th>標題</th>\n                                    <th>時間</th>\n                                    <th>閱讀</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {ccs}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"box-footer\"> </div>\n                </div> */}\n                <div className=\"box box-primary\">\n                    <div className=\"box-header with-border\">\n                        <h3 className=\"box-title\">已寄出</h3>\n                    </div>\n                    <div className=\"box-body\">\n                        <table className=\"table table-striped\">\n                            <thead>\n                                <tr>\n                                    <th style={{ \"width\": \"10px\" }}>#</th>\n                                    <th>寄件者</th>\n                                    <th>標題</th>\n                                    <th>時間</th>\n                                    <th>閱讀</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {sends}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"box-footer\"> </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport { Inbox };"],"mappings":"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","sourceRoot":""}