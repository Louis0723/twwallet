{"version":3,"file":"static/js/15.chunk.js","sources":["/Users/linyitang/Desktop/newWallet2/src/component/qrcode/index.jsx","/Users/linyitang/Desktop/newWallet2/src/page/ethereum/general/etherTransfer.jsx"],"sourcesContent":["import qrcode from './qrcode';\nimport QRcodeInput from './qrcodeInput';\n// import QRcodeView from './qrcodeView';\nexport default {\n    qrcode,\n    QRcodeInput,\n    // QRcodeView\n}\nexport {\n    qrcode,\n    QRcodeInput,\n    // QRcodeView\n}","import React, { Component } from 'react';\nimport { Subject } from 'rxjs'\nimport Bignumber from 'bignumber.js';\nimport { observer, inject } from 'mobx-react';\nimport axios from 'axios';\nimport { QRcodeInput } from '../../../component/qrcode'\nimport QRCode from 'qrcode-react'\nimport * as ethers from 'ethers/index.js';\n\n\n\n@inject('ethereumStore')\n@observer\nexport default class EtherTransfer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            address: props.ethereumStore.address || '0x'.padEnd(42, '0'),\n            balance: []\n        };\n        this.subject = new Subject();\n    }\n    onSearch = (value) => {\n        if (/^0x[0-9a-f]{40}$/ig.test(value)) {\n            this.subject.next(value)\n        }\n    }\n    componentWillReceiveProps(props) {\n        this.state = {\n            address: props.ethereumStore.address || '0x'.padEnd(42, '0'),\n            balance: []\n        };\n        this.onSearch(this.state.address)\n    }\n    componentWillMount = () => {\n        this.subject = this.subject.subscribe({\n            next: async (value) => {\n                try {\n                    let provider = this.props.ethereumStore.provider\n                    let balance = await provider.getBalance(this.props.ethereumStore.address)\n                    this.setState({ balance: balance / 10 ** 18 })\n                } catch (e) { }\n            }\n        })\n        this.onSearch(this.state.address)\n    }\n\n    submit = async (e) => {\n        let transaction = {\n            to: this.target,\n            value: ethers.utils.parseEther(this.amount + '')\n        };\n        console.log(transaction)\n        let tx = await this.props.ethereumStore.wallet.connect(this.props.ethereumStore.provider).sendTransaction(transaction);\n        alert('txid: ' + tx.hash)\n        await tx.wait()\n        this.onSearch(this.state.address)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"box box-primary\">\n                    <div className=\"box-header with-border\">\n                        <h3 className=\"box-title\">自己錢包的QR Code</h3>\n                    </div>\n                    <div className=\"box-body\">\n                        <QRCode size={200} key={this.props.ethereumStore.address} value={this.props.ethereumStore.address} />\n                    </div>\n                </div>\n                <div className=\"box box-primary\">\n                    <div className=\"box-header with-border\">\n                        <h3 className=\"box-title\">ETH轉帳</h3>\n                    </div>\n                    <div className=\"box-body\">\n                        <div className=\"form-group\" >\n                            <label>當前地址</label>\n                            <input type=\"text\" className=\"form-control\" value={this.props.ethereumStore.address} disabled />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>ETH餘額</label>\n                            <input className=\"form-control\" value={this.state.balance} disabled />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"qrcodefile\">收款人地址(掃描或輸入對方QRCode)</label>\n                            <QRcodeInput placeholder=\"0x\" onChange={(e) => { this.target = e.target.value }} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>ETH</label>\n                            <input className=\"form-control\" type=\"number\" defaultValue={'0'} onChange={(e) => { this.amount = e.target.value }} />\n                        </div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.submit}>送出</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport { EtherTransfer };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AACA;AACA;AACA;AACA;AAbA;AAqBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AADA;AACA;AAQA;AACA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAAA;AACA;AADA;AAMA;AACA;AAPA;AAAA;AACA;AADA;AASA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AACA;;;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AA0BA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;AAnFA;AAAA;AAqFA;;;;;;;;;;;;AArFA;;;;;;;;;A","sourceRoot":""}